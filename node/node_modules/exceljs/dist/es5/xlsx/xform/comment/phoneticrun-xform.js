/**
 * Copyright (c) 2016 Guyon Roche
 * LICENCE: MIT - please refer to LICENCE file included with this module
 * or https://github.com/guyonroche/exceljs/blob/master/LICENSE
 */

'use strict';

var utils = require('../../../utils/utils');
var BaseXform = require('../base-xform');
var TextXForm = require('./text-xform')

var PhoneticRunXform = module.exports = function () {
  this.map = {
    t: new TextXForm()
  }
};

utils.inherits(PhoneticRunXform, BaseXform, {

  get tag() {
    return 'rPh';
  },

  render: function render(xmlStream, model) {
    if (model) {
      const _this = this;
      model.forEach(function(r) {
        xmlStream.openNode(_this.tag);
        _this.map.render(xmlStream, r.t);
        xmlStream.closeNode();
      })
    }
  },

  parseOpen: function parseOpen(node) {
    if (this.parser) {
      this.parser.parseOpen(node);
      return true;
    }
    switch (node.name) {
      case this.tag:
        return true;
      default:
        this.parser = this.map[node.name];
        if (this.parser) {
          this.parser.parseOpen(node);
        }
        return true;
    }
  },
  
  parseText: function parseText(text) {
    if (this.parser) {
      this.parser.parseText(text);
      return true;
    }
  },
  parseClose: function parseClose(name) {
    if (name==this.tag) {
      if (this.map.t.model) {
        if (!this.model) this.model = []
        this.model.push(this.map.t.model);
      }
      return false;
    }
    if (this.parser) {
      if (!this.parser.parseClose(name)) {
          this.parser = undefined;
      }
      return true;
    }
    return false;
  },
});
//# sourceMappingURL=sheet-xform.js.map
